================================================================================
INTRODUCTION                                                            *pytest*

pytest.nvim is a template plugin for Neovim that serves as a starting point for
creating new plugins. It provides a structured foundation with best practices
for modern Neovim plugin development.

Table of contents:

1. REQUIREMENTS: Plugin dependencies and setup.            |pytest-requirements|
2. INSTALLATION: How to install the plugin.                |pytest-installation|
3. CONFIGURATION: Available options and their defaults.          |pytest-config|
4. COMMANDS: Commands provided by the plugin.                  |pytest-commands|
5. FUNCTIONS: Lua functions exposed by the plugin.            |pytest-functions|

================================================================================
REQUIREMENTS                                               *pytest-requirements*

Before using pytest.nvim, ensure you have the following:

- Neovim (>= 0.10)
- luarocks (https://luarocks.org/)
- busted (https://lunarmodules.github.io/busted/)
- nlua (https://github.com/mfussenegger/nlua)

For development:
- lazy.nvim (https://github.com/folke/lazy.nvim)
- lazydev.nvim (https://github.com/folke/lazydev.nvim)

================================================================================
INSTALLATION                                               *pytest-installation*

It's recommended to use a plugin manager like lazy.nvim to install pytest.nvim:

>lua
    { "Sombrer0Dev/pytest.nvim", opts = { } }
<

================================================================================
CONFIGURATION                                                    *pytest-config*

                                                                *pytest.setup()*
pytest.setup({opts}) ~

The `pytest.setup()` function sets up the plugin with user-provided options.
Here are the available options:

>lua
  {
    name = "John Doe" -- The name of the user (default)
  }
<

================================================================================
COMMANDS                                                       *pytest-commands*

pytest.nvim provides the following command:

:pytest [subcommand] ~
  Execute a pytest.nvim subcommand. Available subcommands:
  - `hello`: Say hello to the user
  - `bye`: Say bye to the user

  If no subcommand is provided or an invalid subcommand is used, an error
  message will be displayed.

================================================================================
FUNCTIONS                                                     *pytest-functions*

pytest.nvim exposes the following Lua functions:

                                                                *pytest.setup()*
pytest.setup({opts}) ~
  Set up the plugin with the given options. See |pytest-config| for available
  options.

                                                                *pytest.hello()*
pytest.hello() ~
  Say hello to the user. Returns a string with the greeting message.

                                                                  *pytest.bye()*
pytest.bye() ~
  Say bye to the user. Returns a string with the farewell message.


================================================================================
vim:tw=78:ts=8:et:ft=help:norl:
